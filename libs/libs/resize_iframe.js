"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = initResizeHandler;

var _communicator = require("../communications/communicator");

var currentHeight = 0;

function sendLtiIframeResize(height) {
  var message = {
    subject: 'lti.frameResize',
    height: height
  };
  (0, _communicator.broadcastMessage)(message);
}

var defaultGetSize = function defaultGetSize() {
  var ruler = document.getElementById('content-measuring-stick');
  return ruler.offsetTop;
};

function initResizeHandler() {
  var getSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetSize;

  var handleResize = function handleResize() {
    var height = getSize();
    if (height === currentHeight) return;
    currentHeight = height;
    sendLtiIframeResize(currentHeight);
  };

  var mObserver = new MutationObserver(handleResize);
  window.addEventListener('resize', handleResize);
  mObserver.observe(document.documentElement, {
    attributes: true,
    childList: true,
    subtree: true,
    characterData: true
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWJzL3Jlc2l6ZV9pZnJhbWUuanMiXSwibmFtZXMiOlsiY3VycmVudEhlaWdodCIsInNlbmRMdGlJZnJhbWVSZXNpemUiLCJoZWlnaHQiLCJtZXNzYWdlIiwic3ViamVjdCIsImRlZmF1bHRHZXRTaXplIiwicnVsZXIiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwib2Zmc2V0VG9wIiwiaW5pdFJlc2l6ZUhhbmRsZXIiLCJnZXRTaXplIiwiaGFuZGxlUmVzaXplIiwibU9ic2VydmVyIiwiTXV0YXRpb25PYnNlcnZlciIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJvYnNlcnZlIiwiZG9jdW1lbnRFbGVtZW50IiwiYXR0cmlidXRlcyIsImNoaWxkTGlzdCIsInN1YnRyZWUiLCJjaGFyYWN0ZXJEYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUEsSUFBSUEsYUFBYSxHQUFHLENBQXBCOztBQUVBLFNBQVNDLG1CQUFULENBQTZCQyxNQUE3QixFQUFxQztBQUNuQyxNQUFNQyxPQUFPLEdBQUc7QUFBRUMsSUFBQUEsT0FBTyxFQUFFLGlCQUFYO0FBQThCRixJQUFBQSxNQUFNLEVBQU5BO0FBQTlCLEdBQWhCO0FBQ0Esc0NBQWlCQyxPQUFqQjtBQUNEOztBQUVELElBQU1FLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsR0FBTTtBQUMzQixNQUFNQyxLQUFLLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3Qix5QkFBeEIsQ0FBZDtBQUNBLFNBQU9GLEtBQUssQ0FBQ0csU0FBYjtBQUNELENBSEQ7O0FBS2UsU0FBU0MsaUJBQVQsR0FBcUQ7QUFBQSxNQUExQkMsT0FBMEIsdUVBQWhCTixjQUFnQjs7QUFDbEUsTUFBTU8sWUFBWSxHQUFHLFNBQWZBLFlBQWUsR0FBTTtBQUN6QixRQUFNVixNQUFNLEdBQUdTLE9BQU8sRUFBdEI7QUFFQSxRQUFJVCxNQUFNLEtBQUtGLGFBQWYsRUFBOEI7QUFFOUJBLElBQUFBLGFBQWEsR0FBR0UsTUFBaEI7QUFDQUQsSUFBQUEsbUJBQW1CLENBQUNELGFBQUQsQ0FBbkI7QUFDRCxHQVBEOztBQVNBLE1BQU1hLFNBQVMsR0FBRyxJQUFJQyxnQkFBSixDQUFxQkYsWUFBckIsQ0FBbEI7QUFDQUcsRUFBQUEsTUFBTSxDQUFDQyxnQkFBUCxDQUF3QixRQUF4QixFQUFrQ0osWUFBbEM7QUFDQUMsRUFBQUEsU0FBUyxDQUFDSSxPQUFWLENBQ0VWLFFBQVEsQ0FBQ1csZUFEWCxFQUVFO0FBQ0VDLElBQUFBLFVBQVUsRUFBRSxJQURkO0FBQ29CQyxJQUFBQSxTQUFTLEVBQUUsSUFEL0I7QUFDcUNDLElBQUFBLE9BQU8sRUFBRSxJQUQ5QztBQUNvREMsSUFBQUEsYUFBYSxFQUFFO0FBRG5FLEdBRkY7QUFNRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJyb2FkY2FzdE1lc3NhZ2UgfSBmcm9tICcuLi9jb21tdW5pY2F0aW9ucy9jb21tdW5pY2F0b3InO1xuXG5sZXQgY3VycmVudEhlaWdodCA9IDA7XG5cbmZ1bmN0aW9uIHNlbmRMdGlJZnJhbWVSZXNpemUoaGVpZ2h0KSB7XG4gIGNvbnN0IG1lc3NhZ2UgPSB7IHN1YmplY3Q6ICdsdGkuZnJhbWVSZXNpemUnLCBoZWlnaHQgfTtcbiAgYnJvYWRjYXN0TWVzc2FnZShtZXNzYWdlKTtcbn1cblxuY29uc3QgZGVmYXVsdEdldFNpemUgPSAoKSA9PiB7XG4gIGNvbnN0IHJ1bGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRlbnQtbWVhc3VyaW5nLXN0aWNrJyk7XG4gIHJldHVybiBydWxlci5vZmZzZXRUb3A7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbml0UmVzaXplSGFuZGxlcihnZXRTaXplID0gZGVmYXVsdEdldFNpemUpIHtcbiAgY29uc3QgaGFuZGxlUmVzaXplID0gKCkgPT4ge1xuICAgIGNvbnN0IGhlaWdodCA9IGdldFNpemUoKTtcblxuICAgIGlmIChoZWlnaHQgPT09IGN1cnJlbnRIZWlnaHQpIHJldHVybjtcblxuICAgIGN1cnJlbnRIZWlnaHQgPSBoZWlnaHQ7XG4gICAgc2VuZEx0aUlmcmFtZVJlc2l6ZShjdXJyZW50SGVpZ2h0KTtcbiAgfTtcblxuICBjb25zdCBtT2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihoYW5kbGVSZXNpemUpO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlUmVzaXplKTtcbiAgbU9ic2VydmVyLm9ic2VydmUoXG4gICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LFxuICAgIHtcbiAgICAgIGF0dHJpYnV0ZXM6IHRydWUsIGNoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZSwgY2hhcmFjdGVyRGF0YTogdHJ1ZVxuICAgIH1cbiAgKTtcbn1cbiJdfQ==